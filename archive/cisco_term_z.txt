# Cisco IOS - Router, Switch, Access Point

# CDP - Cisco Discovery Protocol
show cdp  # print update timer, hold timer, global config status
show cdp int  # print all cdp int stats
show cdp int INT  # print cdp int stats
show cdp traffic
show cdp neighbors
show cdp neighbors detail
show cdp entry NAME
enable
clear cdp counters  # reset local cdp traffic counters
clear cdp table  # empty contents of local cdp table
|no cdp run  # enable|disable cdp advertisements

# Access Point
BVI = bridge virtual interface  # access GUI
	1)establish console connection  
	2)assign ip address to BVI, no shut  
	3)connect fast ethernet straight-through cable from host pc to AP (DO NOT assign an ip address to fast ethernet interface!)
	4)statically assign ip address for host pc in same network as BVI  
	5)connect to AP through BVI by entering BVI address in to http address field of host pc internet browser
show dot11 network-map  # print network map
show dot11 adjacent-ap  # print adjacent access point list
show dot11 associations client|all-client  # print radio and statistic associations table
show dot11 associations statistics  # print stats for dot11 radio interfaces
clear dot11 statistics dot11radio0  # clears stats for dot11radio 0
clear dot11 statistics 0040.9631.81cf  # clears stats for client radio with specified mac address
show interface dot11radio0 summary

clear dot11 client MAC  # deauthenticate radio client from mac address
clear dot11 client 0040.9645.2196
clear dot11 statistics interface|mac-address  # reset int stat for int or mac addr

ap(config)# interface dot11radio INT  # enter dot11radio interface mode
ap(config)# interface bvi1  # enter bridge virtual interface mode
ap(config-if)# ssid line SSID  # declare ssid character name
ap(config-if)# ssid SSID  # enter ssid interface
ap(config-if-ssid)# authentication open  # allow open ssid access all vlan devices
ap(config-if)# station-role ROLE  # select role of interface
ap(config-if)# station-role root  # configure access point for root operation
ap(config-if)# power client VALUE  # set max power level of client radio tranmissions
ap(config-if)# power local VALUE  # set max power level of access point transmissions
ap(config-if)# channel number|frequency  # set channel and frequency of interface
ap(config-if)# world-mode
	antenna receive left|right|center
	antenna transmit diversity|left|right
	port-protected
	beacon period VALUE
	rts thershold VALUE
	rts retries VALUE
	packet retries VALUE
	fragment-threshold VALUE
ap(config-if)# ip address IP-NET MASK
ap(config-if)# ip address dhcp  # enable dhcp client

# Rom Monitor
rm>dir flash:  # print flash contents
rm>boot flash:IOS-FILE  # boot specified ios file, no space
rm>show version  # print registry number, boot sequence
rm>show start
rm>confreg  # edit terminal settings e.g. baud rate
rm>confreg (0x)2102  # boot from nvram
rm>confreg (0x)2142  # reset password settings
rm>reset|reload|boot  # reboot router
rm>xmodem_-c IOS-FILE  # download ios filename to flash
rm>set  # print rom monitor variables for tftp download session
rm>IP_ADDRESS=IP  # assign ip addr
rm>IP_SUBNET_MASK=MASK
rm>DEFAULT_GATEWAY=IP
rm>TFTP_SERVER=IP
rm>TFTP_FILE=IOS-FILE
rm>tftpdnld  # enable tftp dl

# Switch
## VTP - vlan trunking protocol
sw(config)# vtp mode server|client|transparent  # define vtp mode
sw(config)# vtp domain DOMAIN  # assign vtp domain name
sw(config)# vtp password PASS  # configure vtp domain password
sw(config)# vtp version VER  # assign vtp version number
sw(config)# vtp pruning  # enable vtp pruning

## Frame Relay
>> DCE - Data Communication Equipment
show frame-relay route  # print routes of frame relay protocol
show frame-relay pvc  # print virtual circuit status of listed frame relay interfaces
show frame-relay map  # print info on static and dynamic ip mappings to dlci(s)

sw(config)# frame-relay switching  # define device frame relay switch
sw(config)# int s0/2/0
sw(config-if)# encapsulation frame-relay
sw(config-if)# frame-relay intf-type dce  # can match different physical interface types
sw(config-if)# clockrate 64000
sw(config-if)# frame-relay route 102 interface s0/2/1 201  # fwd traffic from route 102 to serial route 201
sw(config-if)# no shut

>> DTE - Data Terminal Equipment
show frame-relay map  # print frame relay addressing info
show frame-relay pvc  # print pvc stats
show frame-relay lmi  # print lmi stats
|no debug frame-relay lmi  # enable|disable debug, lmi packets
clear frame-relay inverse-arp  # clears dynamically learned frame relay ip mapping

>> DLCI - Data Link Connection Identifier, CIR - Committed Information Rate
rtr(config-if)# encapsulation frame-relay cisco|ietf  # define FR encap type (DTE-to-DTE)
rtr(config-if)# frame-relay lmi-type cisco|ansi|q933a  # define lmi encap type (DTE-to-DCE)
rtr(config-if)# no frame-relay inverse-arp  # disable inverse arp; no dynamic learning
rtr(config-if)# ip address IP MASK  # assign ip address
rtr(config-if)# frame-relay map ip IP DLCI broadcast  # map remote ip to dlci
rtr(config-if)# frame-relay map ip 10.1.1.2 102 broadcast  # allow ip broadcast
rtr(config-if)# no shut

>> DTE - sub-interfaces
rtr(config)# int INT
rtr(config-if)# encapsulation TYPE
rtr(config-if)# int INT-SUB TYPE
rtr(config-subif)# ip address IP MASK
rtr(config-subif)# frame-relay interface-dlci DLCI cisco|ietf  # different encap types
e.g.>
rtr(config)a #int fa0/1
rtr(config-if)# no shut
rtr(config-if)# encapsulation frame-relay
rtr(config-if)# int fa0/1.1 point-to-point
rtr(config-subif)# ip address 140.1.1.1 255.255.255.0
rtr(config-subif)# frame-relay interface-dlci 501 ietf

rtr(config-subif)# int fa0/1.2 multipoint
rtr(config-subif)# ip address 140.1.2.1 255.255.255.0
rtr(config-subif)# frame-relay interface-dlci 502
rtr(config-subif)# frame-relay interface-dlci 503


# ROUTER
show ip rip database  # print rip database
|no debug ip rip  # enable|disable debug

show ip eigrp int  # print eigrp ints
show ip eigrp neighbors  # print eigrp neighbors, successors
show ip eigrp topology  # print successors,f easible successors
show ip eigrp topology IP-NET  # print network addr status + ext route info
show ip eigrp topology all-links  # print all links
show ip eigrp traffic  # print traffic stats
|no debug eigrp fsm|packet  # enable|disable debug

## RIP2
rtr(config)# router rip
rtr(config-router)# version 2  # enable rip version 2
rtr(config-router)# no auto-summary  # disable auto summary
rtr(config-router)#network IP-NET  # no mask

## EIGRP
rtr(config)# router eigrp AS-VAL  # assign eigrp Autonomous System number
rtr(config-router)# network IP-NET MASK  # define routed network ips
rtr(config-router)# maximum-paths  # define equal load cost balancing paths
rtr(config-router)# metric weights tos  # define bandwith delay metrics
rtr(config-if)# |no bandwith VALUE # enable|disable bandwith value, kbps
rtr(config-if)# delay VALUE  # set delay value, tens of microseconds
rtr(config-if)# ip summary-address eigrp AS-VAL IP-NET MASK  # summarize nets per int
rtr(config-if)# ip summary-address eigrp 1 192.168.0.0 0.0.255.255

rtr(config-if)# |no ip bandwidth-percent eigrp AS-VAL  # set update bandwidth pct
rtr(config-if)# ip bandwidth-percent eigrp 1 50  # set update  bandwidth limit 50 pct

rtr(config-if)# ip hello-interval eigrp AS-VAL  # define hello packet interval, sec
rtr(config-if)# ip hello-interval eigrp 1 60

rtr(config-if)# ip hold-time eigrp AS-VAL  # define hold-time, sec
rtr(config-if)# ip hold-time eigrp 1 180

## RIP - authenticate
rtr(config)# key chain RIP_KEY
rtr(config-keychain)# key 1
rtr(config-keychain-key)# key-string cisco
rtr(config-if)# ip rip authentication mode md5
rtr(config-if)# ip rip authentication key-chain RIP_KEY

## EIGRP - authenticate
rtr(config)# key chain EIGRP_KEY
rtr(config-keychain)# key 1
rtr(config-keychain-key)# key-string cisco
rtr(config-if)# ip authentication mode eigrp 1 md5
rtr(config-if)# ip authentication key-chain eigrp 1 EIGRP_KEY


???????????????????????????????????????????????????????????????????
??????????????????????????? WTF, bro  ?????????????????????????????
???????????????????????????????????????????????????????????????????
# hostname, banner config - ?
hostname HOSTNAME  # assign a host name
enable password PASS  # set unencrypted enable password
enable secret PASS  # set encrypted enable password
service password-encryption  # encode all passwords except enable secret password
service timestamps  # enable device to generate time stamps on log messages (especially debug messages!)
banner motd_#MESSAGE#  # set motd banner MESSAGE
banner login_#MESSAGE#  # set login MESSAGE, print after motd message
banner exec_#MESSAGE#  # set executive MESSAGE, print after login process

# telnet|ssh - ?
show sessions  # print telnet/ssh sessions w/ conn numbers
show users  # print user log-in list
telnet|ssh IP
resume CON-NUM
resume 1
disconnect CON-NUM
disconnect 1

# Switch Interface Configuration mode - ?
sw(config-if)# mdix auto  # media dependent interface with crossover; enable auto detect, can sense pin-out settings on both ends of link
sw(config-if)# mac-address MAC  # assign static mac address to interface
sw(config-if)# mls qos trust cos  # identifies voice traffic as priority
sw(config-if-range)# switchport voice vlan VLAN  # assign ints to voice vlan

# Router Global Configuration mode - ?
config-register HEX-REG  # boot reg setting; 2100 (rom monitor), 2101 (rom memory/flash), 2102 (nvram), 2142(password recovery/reset)
