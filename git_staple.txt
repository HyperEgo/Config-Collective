
// Git commands
working directory -> staged -> local repository -> web repository
[create | edit] -> [add to] -> [commit to] -> [push to]

untracked files == working dir
tracked files == repo

cat /etc/gitconfig  // global creds
cat ~/.gitconfig  // local user creds
cat ~/.bashrc

git config --global user.name "Jim Bo"
git config --global user.email idunno@somewhere.com
git config --global core.editor "notepad.exe"
git config --global color.ui true

git config --global alias.st "status"
git config --global alias.lgg "log --graph --oneline --decorate --abbrev-commit --all"
git config --global --unset alias.blah   // remove git alias

git config --list  // see global creds
git config <parameter>  // see specific global cred

git branch  // see current branch(es)
git branch <branch name>  // create branch BUT stay on current
git branch --merged  // see merged branches to current
git branch -m <old branch name> <new branch name>  // rename branch
git branch -d <branch name>  // delete branch
git branch -r  // see remote branch(es)
git branch -a  // see local and remote branch(es)

git show <SHA> | <branch name>  // see commit details

git checkout <branch name>  // switch to branch
git checkout -b <branch name>  // create branch and check it out
git checkout -b <subordinate br.> <main branch>  // checkout subordinate branch from "main" branch
git checkout -- <filename>  // checkout | override file from repo in to working dir

git reset HEAD <filename>  // remove file(s) from staged area to working dir

git log --oneline --graph --decorate --all // see log output oneline, with tree graphics of current
git log <branch name>  // see log of specific branch

git init  // initialize git repo inside current folder
git add .  // add all changes
git add <filename>  // add specific filename
git rm <filename>  // remove file from repo to staged ; after commit, before push

git commit -m "initial commit"  // commit files to repo
git commit -am "add all modified files"  // commit all modified files, no new or deleted files
git commit --amend -m "add to previous commit"  // amend to most recent commit

git status  // see file(s) status of current repo
git diff  // compare working dir and repo
git diff --staged  // compare staged and repo
git diff --color-words  // compare changes side-by-side color contrast

git remote add origin <repo url> // sync repo with online gui
git push -u origin master  // push repo contents to online gui

git clean -f  // remove files from working dir

git merge <branch name>  // merge branch in to current (typically master) ; w/ clean working dir
git merge --no-ff <branch name>  // do "real" merge, no fast forward
git merge --ff-only <branch name>  // only do fast forward merge otherwise abort
git merge --abort  // abort merge

git remote -v  // see list of remotes of current
git remote add <alias> <url>  // add remote repo
git remote rm <alias>  // remove remote

git push -u <alias br> <branch name>  // push branch to remote repo
git push <alias br> --delete <remote>  // delete remote branch but keep local

git clone <URL>  // clone repo, assume master br
git clone [-b <branch name>] <url> <folder name>  // clone repo to local folder
git clone -b <branch name> --single-branch <url>  // clone specific branch NOT master

git fetch <alias br>  // sync with remote to "origin/master" NOT master
git pull = git fetch + git merge

git reset HEAD <file>  // unstage or reset file from repo

keystrokes:
<->+<shift>+<s>+<enter>  // diff ; enable text wrap, linux shell

project/.gitignore
nano
vi .gitignore
*.idea

help.github.com/articles/ignoring-files
github.com/github/gitignore

// shared repo
mkdir -p /share/devrepo.git
chgrp devgroup /share/devrepo.git
chmod g+ws /share/devrepo.git

cd /share/devrepo.git
git init --bare --shared=group

*** COMMIT files ***
git status  // check commit status
git add .  // add files to staging
git commit -m "add to repository"  // commit files to local repo
git commit -a  // go to editor, add multi-line commit message
git push  // push files to remote repo


*** Initialize repo - example 1 ***
touch test-file.txt
git init
git add test-file.txt
git commit -m "first commit"
git remote add origin https://github.com/HyperEgo/student_works.git
git push -u origin master


*** Initialize repo - example 2 ***
git init
git add -A .  // add all files in current directory to staging
git commit -m "add to repository"  // add file to local repo
git config user.email "email"
git config user.name "username"
git remote add origin https://github.com/HyperEgo/student_works.git
git push -u origin master
git push -f origin master  // optional - use [f]orce flag to push, if errors persist


*** DELETE directories from Git ***
git rm -r *  // remove all files in current directory
git commit -m "Remove files in directory"  // commit to local repo
git push origin master

